import{_ as s,c as n,o as a,a as l}from"./app.eff5f3e9.js";const i=JSON.parse('{"title":"2022年06月14日","description":"","frontmatter":{},"headers":[{"level":2,"title":"头条","slug":"头条","link":"#头条","children":[]},{"level":2,"title":"code","slug":"code","link":"#code","children":[]},{"level":2,"title":"每日一题","slug":"每日一题","link":"#每日一题","children":[]},{"level":2,"title":"产品经理","slug":"产品经理","link":"#产品经理","children":[]}],"relativePath":"2022年06月14日.md","lastUpdated":1655137298000}'),p={name:"2022年06月14日.md"},o=l(`<h1 id="_2022年06月14日" tabindex="-1">2022年06月14日 <a class="header-anchor" href="#_2022年06月14日" aria-hidden="true">#</a></h1><h2 id="头条" tabindex="-1">头条 <a class="header-anchor" href="#头条" aria-hidden="true">#</a></h2><p><a href="https://toutiao.io/k/ea4uy8e" target="_blank" rel="noreferrer">“拖文件自动上传到远程服务器”，支持多种平台的原生终端。</a></p><p><a href="https://toutiao.io/k/4vki4nq" target="_blank" rel="noreferrer">线上真实排队系统重构案例分享——实战篇</a></p><p><a href="https://toutiao.io/k/ulsc0so" target="_blank" rel="noreferrer">高并发下如何防重？</a></p><p><a href="https://toutiao.io/k/z3twv9y" target="_blank" rel="noreferrer">收藏！14 种异常检测方法总结</a></p><p><a href="https://toutiao.io/k/bclz2n6" target="_blank" rel="noreferrer">肝了一个月的 DDD，一文带你掌握！</a></p><p><a href="https://toutiao.io/k/1n7mr7t" target="_blank" rel="noreferrer">再有人问你什么是分库分表，直接把这篇文章发给他</a></p><p><a href="https://toutiao.io/k/x8vfmww" target="_blank" rel="noreferrer">Go练手：日志监控告警</a></p><p><a href="https://toutiao.io/k/9pcbq29" target="_blank" rel="noreferrer">PyScript：让 Python 在 Web 中跑起来</a></p><p><a href="https://toutiao.io/k/zldyqi6" target="_blank" rel="noreferrer">五分钟搞定Flink双流JOIN面试题</a></p><p><a href="https://toutiao.io/k/a6qnyu9" target="_blank" rel="noreferrer">「大模型」之所短，「知识图谱」之所长</a></p><p><a href="https://toutiao.io/k/1vqpjs3" target="_blank" rel="noreferrer">失去才懂珍惜？Apache Ambari 项目即将重启，再次进入 Apache 孵化器</a></p><p><a href="https://toutiao.io/k/10msgvn" target="_blank" rel="noreferrer">Web组件构建库-Lit</a></p><p><a href="https://toutiao.io/k/zlz2m0h" target="_blank" rel="noreferrer">拥抱开放，Serverless 时代的下一征程</a></p><p><a href="https://toutiao.io/k/vsqya51" target="_blank" rel="noreferrer">轻松玩转 iOS 16 锁屏界面</a></p><p><a href="https://toutiao.io/k/6fv99q9" target="_blank" rel="noreferrer">聊聊 C# 方法重载的底层玩法</a></p><p><a href="https://toutiao.io/k/xtg731v" target="_blank" rel="noreferrer">Go 1.19 Beta1 发布，这个改动挺有意思</a></p><p><a href="https://toutiao.io/k/jm9x72w" target="_blank" rel="noreferrer">干货！前端 JS 模块化及其工具演变！</a></p><p><a href="https://toutiao.io/k/jv0745e" target="_blank" rel="noreferrer">可视化 Kubernetes 历史记录</a></p><p><a href="https://toutiao.io/k/e8xe879" target="_blank" rel="noreferrer">【第2639期】面向微前端，谈谈 JavaScript 隔离沙箱机制的古往今来</a></p><p><a href="https://toutiao.io/k/1ash116" target="_blank" rel="noreferrer">隐私计算FATE-核心概念与单机部署指南</a></p><p><a href="https://toutiao.io/k/nuwnwro" target="_blank" rel="noreferrer">[推荐] 消息队列原理和选型：Kafka、RocketMQ 、RabbitMQ 和 ActiveMQ</a></p><p><a href="https://toutiao.io/k/rzytby1" target="_blank" rel="noreferrer">[推荐] 总监的烦恼：技术丢了怎么办？</a></p><p><a href="https://toutiao.io/k/gl2cth8" target="_blank" rel="noreferrer">[推荐] 如何写出一篇好的技术方案？</a></p><p><a href="https://toutiao.io/k/27b6p2e" target="_blank" rel="noreferrer">[推荐] 架构师成长路线图</a></p><p><a href="https://toutiao.io/k/efxw4nr" target="_blank" rel="noreferrer">[推荐] MongoDB全方位知识图谱！</a></p><h2 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><p><a href="https://leetcode.cn/problems/diagonal-traverse" target="_blank" rel="noreferrer">对角线遍历</a></p><h2 id="每日一题" tabindex="-1">每日一题 <a class="header-anchor" href="#每日一题" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">                  这是 Go语言爱好者周刊：第 </span><span style="color:#F78C6C;">65</span><span style="color:#A6ACCD;"> 期 刊首语发的一道题，以下代码输出什么？</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">encoding/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AutoGenerated</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Age   </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;age&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Name  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;name&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Child </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;child&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	jsonStr1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{&quot;age&quot;: 14,&quot;name&quot;: &quot;potter&quot;, &quot;child&quot;:[1,2,3]}</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	a </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> AutoGenerated</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unmarshal</span><span style="color:#89DDFF;">([]</span><span style="color:#82AAFF;">byte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">jsonStr1</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	aa </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">aa</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	jsonStr2 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{&quot;age&quot;: 12,&quot;name&quot;: &quot;potter&quot;, &quot;child&quot;:[3,4,5,7,8,9]}</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unmarshal</span><span style="color:#89DDFF;">([]</span><span style="color:#82AAFF;">byte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">jsonStr2</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">aa</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">A：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> ；B：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">； C：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">；D：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">这道题的正确率只有 </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                    查看答案</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"><span style="color:#A6ACCD;">                  答案解析：</span></span>
<span class="line"><span style="color:#A6ACCD;">                  结果为什么是 </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 呢？</span></span>
<span class="line"><span style="color:#A6ACCD;">这道题涉及到两个知识点：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">json 解析；</span></span>
<span class="line"><span style="color:#A6ACCD;">slice；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">、json 解析</span></span>
<span class="line"><span style="color:#A6ACCD;">关于 json</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Unmarshal 的文档，不少人可能没认真看。借此机会正好一起看下。https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//docs.studygolang.com/pkg/encoding/json/#Unmarshal。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Unmarshal 解析 JSON 编码的数据，并将结果存入 v 指向的值。如果 v 为 </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> 或不是指针，则 Unmarshal 返回 InvalidUnmarshalError。</span></span>
<span class="line"><span style="color:#A6ACCD;">Unmarshal 和 Marshal 做相反的操作，必要时申请 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;">、slice 或指针，有如下的附加规则：</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">为了将 JSON 数据解码写入一个指针，Unmarshal 首先处理 JSON 数据为 JSON 字面值 null 的情况。此时，Unmarshal 会将指针设置为 </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;">。否则，Unmarshal 会将 JSON 数据解码为指针所指向的值。如果指针为 </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;">，则 Unmarshal 为其分配一个新值并使指针指向它。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">为了将 JSON 数据解码为实现 Unmarshaler 接口的值，Unmarshal 调用该值的 UnmarshalJSON 方法，包括当输入为 JSON  null 时。否则，如果该值实现 encoding</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TextUnmarshaler 且输入是带引号的 JSON 字符串，则 Unmarshal 会使用该字符串的未加引号形式来调用该值的 UnmarshalText 方法。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">要将 json 数据解码写入一个结构体，函数会匹配输入对象的键和 Marshal 使用的键（结构体字段名或者它的标签指定的键名），优先选择精确的匹配，但也接受大小写不敏感的匹配；</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">为了将 JSON 数据解码到结构中，Unmarshal 将传入的对象键与 Marshal 使用的键（结构字段名称或其 Tag）进行匹配，希望使用精确匹配，但还接受不区分大小写的匹配。默认情况下，没有相应结构字段的对象键将被忽略（有关替代方法，请参见 Decoder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DisallowUnknownFields）。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">要将 JSON 数据解码写入一个接口类型值，Unmarshal 将其中之一存储在接口值中：</span></span>
<span class="line"><span style="color:#A6ACCD;">Bool                   对应JSON布尔类型</span></span>
<span class="line"><span style="color:#C792EA;">float64</span><span style="color:#A6ACCD;">                对应JSON数字类型</span></span>
<span class="line"><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">                 对应JSON字符串类型</span></span>
<span class="line"><span style="color:#89DDFF;">[]interface{}</span><span style="color:#A6ACCD;">          对应JSON数组</span></span>
<span class="line"><span style="color:#89DDFF;">map[</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">]interface{}</span><span style="color:#A6ACCD;"> 对应JSON对象</span></span>
<span class="line"><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;">                    对应JSON的null</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">要将一个 JSON 数组解码到切片（slice）中，Unmarshal 将切片长度重置为零，然后将每个元素 append 到切片中。特殊情况，如果将一个空的 JSON 数组解码到一个切片中，Unmarshal 会用一个新的空切片替换该切片。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">为了将 JSON 数组解码为 Go 数组，Unmarshal 将 JSON 数组元素解码为对应的 Go 数组元素。如果 Go 数组长度小于 JSON 数组，则其他 JSON 数组元素将被丢弃。如果 JSON 数组长度小于 Go 数组，则将其他 Go 数组元素会设置为零值。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">要将 JSON 对象解码到 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;"> 中，Unmarshal 首先要建立将使用的 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;">。如果 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;"> 为零，Unmarshal 会分配一个新 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;">。否则，Unmarshal 会重用现有 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;">，保留现有条目（item）。然后，Unmarshal 将来自 JSON 对象的键</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">值对存储到 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;"> 中。</span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;"> 的键类型必须是任意字符串类型、整数或实现了 json</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Unmarshaler 或 encoding</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TextUnmarshaler 接口的类型。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">如果 JSON 值不适用于给定的目标类型，或者 JSON 数字写入目标类型时溢出，则 Unmarshal 会跳过该字段并尽最大可能完成解析。如果没有遇到更多的严重错误，则 Unmarshal 返回一个 UnmarshalTypeError 来描述最早的此类错误。但无法确保有问题的字段之后的所有其余字段都将被解析到目标对象中。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">JSON 的 null 值解码为 Go 的接口、指针、切片时会将它们设为 </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;">，因为 null 在 JSON 里一般表示“不存在”。 因此将 JSON null 解码到任何其他 Go 类型中不会影响该值，并且不会产生任何错误。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">解析带引号的字符串时，无效的 UTF</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> 或无效的 UTF</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;"> 不会被视为错误。而是将它们替换为 Unicode 字符 U</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">FFFD。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">跟此题相关的是下面这点：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">要将一个 JSON 数组解码到切片（slice）中，Unmarshal 将切片长度重置为零，然后将每个元素 append 到切片中。特殊情况，如果将一个空的 JSON 数组解码到一个切片中，Unmarshal 会用一个新的空切片替换该切片。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">因此第一次解析时，a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 是 </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">，aa 自然也是 </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">。第二次解析时，a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 的长度会被重置为 </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">，也就说里面的值会被重置（比如 a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child</span><span style="color:#89DDFF;">[:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">），然后将 </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;"> 一个个 append 到 a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 中。</span></span>
<span class="line"><span style="color:#A6ACCD;">而 append 操作可能会涉及到底层数组的扩容：当原来的容量不足时，会进行扩容。怎么扩容的呢？目前的版本（Go1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">15.x）按照如下规则扩容：（扩容规则依赖具体实现，不同版本可能不一样）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Get element of array, growing if necessary.</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Kind</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> reflect</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Slice </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Grow slice if necessary</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Cap</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    newcap </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Cap</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Cap</span><span style="color:#89DDFF;">()/</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> newcap </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      newcap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    newv </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> reflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MakeSlice</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Type</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Len</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> newcap</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    reflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">newv</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">newv</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Len</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetLen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">初始容量最小为 </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">；</span></span>
<span class="line"><span style="color:#A6ACCD;">之后按照容量的一半扩容，所以容量是 </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">13</span><span style="color:#A6ACCD;">、19...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">有人问上题为什么 aa 的容量是 </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">，这里正好解释了。</span></span>
<span class="line"><span style="color:#A6ACCD;">因此，第一次解析，aa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 是：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">，cap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">。第二次解析，aa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 先被重置，之后将 </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;"> 一个个 append，最后 aa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 是：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> cap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">。</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">、slice</span></span>
<span class="line"><span style="color:#A6ACCD;">以上就是能从 json Unmarshal 文档能学到的相关知识。接下来关键在于 slice。关于 slice 的知识，网上很多教程，这里只讲解和该题相关的内容。</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">）aa </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 意味着什么？</span></span>
<span class="line"><span style="color:#A6ACCD;">先看 a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 的内部结构。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">赋值给 aa 后呢？aa 和 a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 共用底层数组。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">这里有引入一个小知识点，aa </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 后，以下代码输出的两个地址是一样的：</span></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%p,%p</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> aa</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">它们输出的都是底层数组的地址，这里一定要注意。通过它们，你可以验证底层数组扩容了（地址变了，表明扩容了）。</span></span>
<span class="line"><span style="color:#A6ACCD;">如果要输出 slice 本身的地址，应该这样：</span></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%p,%p</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">aa</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">）执行第二次 json 解析后</span></span>
<span class="line"><span style="color:#A6ACCD;">根据上文的讲解，底层数组从索引 </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> 位置开始依次被 </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> 填充。因为 aa 的 len 是 </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">，所以即使底层数组变成了 </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">，aa 看到却是 </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">、</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">。</span></span>
<span class="line"><span style="color:#A6ACCD;">当再继续解析时，底层数组容量不够，因此进行扩容，cap 变成 </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">，将原底层数组的元素拷贝一份到新的数组中。所以最后 a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Child 的底层数组是这个新的底层数组：</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">，cap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">。而 aa 的底层数组还是原来的。最后的内部表示是这样的。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">、小结</span></span>
<span class="line"><span style="color:#A6ACCD;">总结起来两点：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">json 解析的规则，文档上明确说明了；（有人评论说跟 json 没关系，但我觉得很多人根本不知道 json 对这块是怎么处理的，正因为有这样的处理，才引出了 slice 扩容的问题）</span></span>
<span class="line"><span style="color:#A6ACCD;">slice 内部表示和 append 导致扩容。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">希望你已经彻底掌握了以上知识点。</span></span>
<span class="line"><span style="color:#A6ACCD;">答案解析来自：https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//polarisxu.studygolang.com/posts/go/action/interview-slice-json/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br></div></div><h2 id="产品经理" tabindex="-1">产品经理 <a class="header-anchor" href="#产品经理" aria-hidden="true">#</a></h2><p><a href="http://www.woshipm.com/zhichang/5483845.html" target="_blank" rel="noreferrer">复工第一天，我被裁员了</a></p><p><a href="http://www.woshipm.com/it/5483311.html" target="_blank" rel="noreferrer">数字藏品人人爱，视频平台竞折腰</a></p><p><a href="http://www.woshipm.com/online/5484395.html" target="_blank" rel="noreferrer">我，校招颗粒无收，马上毕业，入行产品还有戏吗？</a></p><p><a href="http://www.woshipm.com/pd/5482614.html" target="_blank" rel="noreferrer">5600字带你全面系统了解主数据管理</a></p><p><a href="http://www.woshipm.com/it/5483802.html" target="_blank" rel="noreferrer">当修勾夜店请来“百大DJ“，B站网友：这谁？</a></p><p><a href="http://www.woshipm.com/it/5483433.html" target="_blank" rel="noreferrer">抖音快手短剧计划对垒，都在比谁的门槛更低？</a></p><p><a href="http://www.woshipm.com/marketing/5483985.html" target="_blank" rel="noreferrer">支持赠品这种玩法，交易各链路需要做什么</a></p><p><a href="http://www.woshipm.com/it/5483412.html" target="_blank" rel="noreferrer">告别“0佣金”，抖音撬得动万亿本地生活市场吗？</a></p><p><a href="http://www.woshipm.com/evaluating/5483694.html" target="_blank" rel="noreferrer">如何撰写产品体验报告？</a></p><p><a href="http://www.woshipm.com/it/5483831.html" target="_blank" rel="noreferrer">9.9元包邮的手串，才是盘串女孩的快乐</a></p><p><a href="http://www.woshipm.com/ucd/5483157.html" target="_blank" rel="noreferrer">应用图标 | 全面解析，助力设计出更优质的应用图标！</a></p><p><a href="http://www.woshipm.com/marketing/5483334.html" target="_blank" rel="noreferrer">如何用较低的预算在海外推广APP产品？</a></p><p><a href="http://www.woshipm.com/chuangye/5483755.html" target="_blank" rel="noreferrer">对话罗永浩：再创业可能后悔，不再创业百分之百后悔</a></p><p><a href="http://www.woshipm.com/open/5483910.html" target="_blank" rel="noreferrer">B端免费直播课 | B端产品如何帮助企业降本增效，10年B端老司机告诉你答案！</a></p><p><a href="http://www.woshipm.com/it/5483761.html" target="_blank" rel="noreferrer">这一刻，人人都爱俞敏洪</a></p><p><a href="http://www.woshipm.com/it/5483547.html" target="_blank" rel="noreferrer">互联网视频的世纪性争议：横屏还是竖屏？</a></p><p><a href="http://www.woshipm.com/operate/5483809.html" target="_blank" rel="noreferrer">3个硬核方法，专治新用户来了就跑！</a></p>`,49),e=[o];function r(t,c,C,D,y,A){return a(),n("div",null,e)}const b=s(p,[["render",r]]);export{i as __pageData,b as default};
