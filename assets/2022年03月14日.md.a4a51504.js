import{_ as s,c as n,o as a,a as l}from"./app.eff5f3e9.js";const C=JSON.parse('{"title":"2022年03月14日","description":"","frontmatter":{},"headers":[{"level":2,"title":"头条","slug":"头条","link":"#头条","children":[]},{"level":2,"title":"code","slug":"code","link":"#code","children":[]},{"level":2,"title":"每日一题","slug":"每日一题","link":"#每日一题","children":[]}],"relativePath":"2022年03月14日.md","lastUpdated":1647271588000}'),p={name:"2022年03月14日.md"},e=l(`<h1 id="_2022年03月14日" tabindex="-1">2022年03月14日 <a class="header-anchor" href="#_2022年03月14日" aria-hidden="true">#</a></h1><h2 id="头条" tabindex="-1">头条 <a class="header-anchor" href="#头条" aria-hidden="true">#</a></h2><p><a href="https://toutiao.io/k/bcodelm" target="_blank" rel="noreferrer">成为更好的开发者！行动起来！</a></p><p><a href="https://toutiao.io/k/enmg99d" target="_blank" rel="noreferrer">架构师如何选型分布式业务网关</a></p><p><a href="https://toutiao.io/k/tkb15br" target="_blank" rel="noreferrer">结合最近的感受谈谈《原则》和《浪潮之巅》给我的启示</a></p><p><a href="https://toutiao.io/k/qnfl3t6" target="_blank" rel="noreferrer">最常用的架构模式</a></p><p><a href="https://toutiao.io/k/zusq063" target="_blank" rel="noreferrer">基于Web内核的微信小程序框架实践</a></p><p><a href="https://toutiao.io/k/2hosbu7" target="_blank" rel="noreferrer">数据中台之OneID (ID-Mapping)架构设计细节全解</a></p><p><a href="https://toutiao.io/k/kjlg5vq" target="_blank" rel="noreferrer">重构于 Vite：我如何做 SSG、静态资源发布以及自动化部署</a></p><p><a href="https://toutiao.io/k/j230wfq" target="_blank" rel="noreferrer">程序员必备的几种常见排序算法和搜索算法总结</a></p><p><a href="https://toutiao.io/k/xl5b90u" target="_blank" rel="noreferrer">那些年我做的开源项目之KV引擎（NutsDB）</a></p><p><a href="https://toutiao.io/k/dpr2ch4" target="_blank" rel="noreferrer">一文读懂层次聚类（Python代码）</a></p><p><a href="https://toutiao.io/k/7wn7ly3" target="_blank" rel="noreferrer">完了，下属成长速度超过我了怎么办？</a></p><p><a href="https://toutiao.io/k/2vdescl" target="_blank" rel="noreferrer">太离谱了，世界未解之谜上的物种竟然都有数据集了~</a></p><p><a href="https://toutiao.io/k/yunu9qi" target="_blank" rel="noreferrer">iOS 高刷屏监控 + 优化：从理论到实践全面解析</a></p><p><a href="https://toutiao.io/k/nwv8ulb" target="_blank" rel="noreferrer">Prometheus 参考实现的时序数据库 Gorilla 介绍</a></p><p><a href="https://toutiao.io/k/vxpgeo7" target="_blank" rel="noreferrer">Go官方 - 1.18 发布说明</a></p><p><a href="https://toutiao.io/k/8cpc8ct" target="_blank" rel="noreferrer">通用能力抽象选择SDK组件还是API服务？</a></p><p><a href="https://toutiao.io/k/o8s8taj" target="_blank" rel="noreferrer">Bean容器生命周期，好像人的一生。。</a></p><p><a href="https://toutiao.io/k/s4njudj" target="_blank" rel="noreferrer">能动的电脑配件「GitHub 热点速览 v.22.11」</a></p><p><a href="https://toutiao.io/k/fmq2y43" target="_blank" rel="noreferrer">Gin框架的设计模式-&quot;控制反转&quot;</a></p><p><a href="https://toutiao.io/k/uyyb10d" target="_blank" rel="noreferrer">读书分享｜高效能人士要培养哪些习惯</a></p><p><a href="https://toutiao.io/k/71bhcm8" target="_blank" rel="noreferrer">Decoded: GNU coreutils</a></p><p><a href="https://toutiao.io/k/pshtt8d" target="_blank" rel="noreferrer">[推荐] 快看我在Redis分布式锁上，栽的8个跟头！</a></p><p><a href="https://toutiao.io/k/qjooigy" target="_blank" rel="noreferrer">[推荐] MySQL 团队开发规范</a></p><p><a href="https://toutiao.io/k/f4vabj7" target="_blank" rel="noreferrer">[推荐] 微服务如何划分</a></p><p><a href="https://toutiao.io/k/imslmgz" target="_blank" rel="noreferrer">[推荐] 高并发是一种架构思维模式</a></p><p><a href="https://toutiao.io/k/xk3qbvm" target="_blank" rel="noreferrer">[推荐] 微服务从代码到k8s部署应有尽有大结局（k8s部署）</a></p><p><a href="https://toutiao.io/k/chtkqxo" target="_blank" rel="noreferrer">[推荐] Java泛型详解，史上最全图文详解！</a></p><p><a href="https://toutiao.io/k/hjda293" target="_blank" rel="noreferrer">[推荐] 我的命令行开发环境 ❤️</a></p><h2 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/minimum-index-sum-of-two-lists" target="_blank" rel="noreferrer">两个列表的最小索引总和</a></p><h2 id="每日一题" tabindex="-1">每日一题 <a class="header-anchor" href="#每日一题" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">                  以下代码输出什么？</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    ch1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(chan</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(&lt;-</span><span style="color:#A6ACCD;">ch1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    ch1 </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">    time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Second</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">A：</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">、B：不能编译；C：运行时死锁</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                    查看答案</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"><span style="color:#A6ACCD;">                  答案解析：</span></span>
<span class="line"><span style="color:#A6ACCD;">                  这是 Go语言爱好者周刊第 </span><span style="color:#F78C6C;">78</span><span style="color:#A6ACCD;"> 期的一道题。当时正确率有点低，才 </span><span style="color:#F78C6C;">35</span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">，可见不少人的基础还是不扎实。</span></span>
<span class="line"><span style="color:#A6ACCD;">此题如果改为这样：</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ch1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(chan</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(&lt;-</span><span style="color:#A6ACCD;">ch1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}()</span></span>
<span class="line"><span style="color:#A6ACCD;">	ch1 </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">	time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Second</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">结果就是 A 了。对比下你能知道原因了吧！</span></span>
<span class="line"><span style="color:#A6ACCD;">在 Go 语言规范中，关于 </span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> 语句有这么一句描述：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">GoStmt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">go</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> Expression </span><span style="color:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">The expression must be a function or method call</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> it cannot be parenthesized</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> Calls of built</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">in functions are restricted as </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> expression statements</span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">The function value and parameters are evaluated as usual in the calling goroutine</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> but unlike with a regular call</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> program execution does not wait </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> the invoked function to complete</span><span style="color:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">这里说明，</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> 语句后面的函数调用，其参数会先求值，这和普通的函数调用求值一样。在规范中调用部分是这样描述的：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Given an expression f of function </span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">F</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">f</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> … an</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">calls f with arguments a1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> … an</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> Except </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> one special </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arguments must be single</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">valued expressions assignable to the parameter types of F and are evaluated before the function is called</span><span style="color:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">大意思是说，函数调用之前，实参就被求值好了。</span></span>
<span class="line"><span style="color:#A6ACCD;">因此这道题目 </span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(&lt;-</span><span style="color:#A6ACCD;">ch1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 语句中的 </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;">ch1 是在 main goroutine 中求值的。这相当于一个无缓冲的 </span><span style="color:#89DDFF;">chan</span><span style="color:#A6ACCD;">，发送和接收操作都在一个 goroutine 中（main goroutine）进行，因此造成死锁。</span></span>
<span class="line"><span style="color:#A6ACCD;">更进一步，大家可以通过汇编看看上面两种方式的不同。</span></span>
<span class="line"><span style="color:#A6ACCD;">此外，</span><span style="color:#89DDFF;font-style:italic;">defer</span><span style="color:#A6ACCD;"> 语句也要注意。比如下面的做法是不对的：</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">defer</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">recover</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">而应该使用这样的方式：</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">defer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">recover</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">答案解析来自：https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//polarisxu.studygolang.com/posts/go/action/weekly-question-78/。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div>`,34),o=[e];function r(t,c,i,D,y,F){return a(),n("div",null,o)}const b=s(p,[["render",r]]);export{C as __pageData,b as default};
