import{_ as s,c as a,o as n,a as l}from"./app.eff5f3e9.js";const C=JSON.parse('{"title":"2022年01月19日","description":"","frontmatter":{},"headers":[{"level":2,"title":"头条","slug":"头条","link":"#头条","children":[]},{"level":2,"title":"code","slug":"code","link":"#code","children":[]},{"level":2,"title":"每日一题","slug":"每日一题","link":"#每日一题","children":[]}],"relativePath":"2022年01月19日.md","lastUpdated":1642605826000}'),p={name:"2022年01月19日.md"},e=l(`<h1 id="_2022年01月19日" tabindex="-1">2022年01月19日 <a class="header-anchor" href="#_2022年01月19日" aria-hidden="true">#</a></h1><h2 id="头条" tabindex="-1">头条 <a class="header-anchor" href="#头条" aria-hidden="true">#</a></h2><p><a href="https://toutiao.io/k/abc8vou" target="_blank" rel="noreferrer">优雅整洁的 Java 代码命名技巧，风之极·净化</a></p><p><a href="https://toutiao.io/k/dxwt6fy" target="_blank" rel="noreferrer">深度剖析 Seata TCC 模式【图解 + 源码分析】</a></p><p><a href="https://toutiao.io/k/fp0dy5f" target="_blank" rel="noreferrer">带你彻底击溃跳表原理及其Golang实现！（内含图解）</a></p><p><a href="https://toutiao.io/k/zqnpdh9" target="_blank" rel="noreferrer">Python代替Excel VBA，原来真的可以</a></p><p><a href="https://toutiao.io/k/libwh52" target="_blank" rel="noreferrer">一位程序员的财务自由之路</a></p><p><a href="https://toutiao.io/k/t34zvms" target="_blank" rel="noreferrer">Flutter For Web 编译的两种方案</a></p><p><a href="https://toutiao.io/k/1q1s2t1" target="_blank" rel="noreferrer">伴鱼事件分析平台设计</a></p><p><a href="https://toutiao.io/k/n5mdm2x" target="_blank" rel="noreferrer">深入理解 CPU 的调度原理</a></p><p><a href="https://toutiao.io/k/rjwd2wq" target="_blank" rel="noreferrer">NVS —— js 实现的node版本管理工具</a></p><p><a href="https://toutiao.io/k/y5ztper" target="_blank" rel="noreferrer">大吉大利虎年春节猫福盒，点击链接立即领券购买！</a></p><p><a href="https://toutiao.io/k/sjeouk4" target="_blank" rel="noreferrer">超硬核！详解Apache Hudi灵活的Payload机制</a></p><p><a href="https://toutiao.io/k/2d6u1v9" target="_blank" rel="noreferrer">代码质量第2层-可重用的代码</a></p><p><a href="https://toutiao.io/k/ajqw8gn" target="_blank" rel="noreferrer">2021 大促 AntMonitor 总结 - 云原生 Prometheus 监控实践</a></p><p><a href="https://toutiao.io/k/xgkpiyh" target="_blank" rel="noreferrer">阿里云容器服务差异化 SLO 混部技术实践</a></p><p><a href="https://toutiao.io/k/no4tj9h" target="_blank" rel="noreferrer">KubeDL HostNetwork：加速分布式训练通信效率</a></p><p><a href="https://toutiao.io/k/6r068w9" target="_blank" rel="noreferrer">动手实现一个适用于.NET Core 的诊断工具</a></p><p><a href="https://toutiao.io/k/vd8ag4a" target="_blank" rel="noreferrer">深入浅出Apache Pulsar（2）：Pulsar消息机制</a></p><p><a href="https://toutiao.io/k/jtv0j02" target="_blank" rel="noreferrer">Form 表单在数栈的应用(下)：深入篇</a></p><p><a href="https://toutiao.io/k/f9qe7be" target="_blank" rel="noreferrer">[推荐] 干货总结！Kafka 面试大全（万字长文，37 张图，28 个知识点）</a></p><p><a href="https://toutiao.io/k/zylzzpi" target="_blank" rel="noreferrer">[推荐] 网络编程怎么做才算是优雅？</a></p><p><a href="https://toutiao.io/k/4g58j8v" target="_blank" rel="noreferrer">[推荐] 从零开始搭建公司微服务授权架构技术栈（3种模式），这架构稳的一批...</a></p><p><a href="https://toutiao.io/k/j0r6746" target="_blank" rel="noreferrer">[推荐] 京东ClickHouse的实践之路</a></p><p><a href="https://toutiao.io/k/ldd1cse" target="_blank" rel="noreferrer">[推荐] 用规则引擎让你一天上线十个需求</a></p><p><a href="https://toutiao.io/k/1wuwmui" target="_blank" rel="noreferrer">[推荐] 服务探活的五种方式</a></p><p><a href="https://toutiao.io/k/mgym1lv" target="_blank" rel="noreferrer">[推荐] 浅谈缓存最终一致性的解决方案</a></p><p><a href="https://toutiao.io/k/ymscqc1" target="_blank" rel="noreferrer">[推荐] 缓存一致性最佳实践</a></p><p><a href="https://toutiao.io/k/zzaz6vu" target="_blank" rel="noreferrer">[推荐] 关于代码质量退化的思考</a></p><p><a href="https://toutiao.io/k/0mfx2nd" target="_blank" rel="noreferrer">[推荐] JVM调优的几种场景（建议收藏）</a></p><p><a href="https://toutiao.io/k/hufqvji" target="_blank" rel="noreferrer">[推荐] 从零打造 Instagram</a></p><p><a href="https://toutiao.io/k/1dauixx" target="_blank" rel="noreferrer">[推荐] 据说看完这篇 JVM 要一小时</a></p><p><a href="https://toutiao.io/k/4ndh1gd" target="_blank" rel="noreferrer">[推荐] 面渣逆袭：Java并发六十问，图文详解，快来看看你会多少道！</a></p><p><a href="https://toutiao.io/k/xw2lnva" target="_blank" rel="noreferrer">[推荐] 再见了 VMware，一款更轻量级的虚拟机！</a></p><h2 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/contains-duplicate-ii" target="_blank" rel="noreferrer">存在重复元素 II</a></p><h2 id="每日一题" tabindex="-1">每日一题 <a class="header-anchor" href="#每日一题" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">                  空 </span><span style="color:#89DDFF;">struct{}</span><span style="color:#A6ACCD;"> 占多少空间？有什么用途？</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                    查看答案</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"><span style="color:#A6ACCD;">                  答案解析：</span></span>
<span class="line"><span style="color:#A6ACCD;">                  使用空结构体 </span><span style="color:#89DDFF;">struct{}</span><span style="color:#A6ACCD;"> 可以节省内存，一般作为占位符使用，表明这里并不需要一个值。</span></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">unsafe</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sizeof</span><span style="color:#89DDFF;">(struct{}{}))</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">比如使用 </span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;"> 表示集合时，只关注 key，value 可以使用 </span><span style="color:#89DDFF;">struct{}</span><span style="color:#A6ACCD;"> 作为占位符。如果使用其他类型作为占位符，例如 </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">，</span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;">，不仅浪费了内存，而且容易引起歧义。</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Set</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">map[</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">]struct{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	set </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> _</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">range</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">B</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		set</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{}{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">set</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> _</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ok </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">];</span><span style="color:#A6ACCD;"> ok </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A exists</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// A exists</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">再比如，</span><span style="color:#82AAFF;">使用信道</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">channel</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">控制并发时，我们只是需要一个信号，但并不需要传递值，这个时候，也可以使用 </span><span style="color:#89DDFF;">struct{}</span><span style="color:#A6ACCD;"> 代替。</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ch </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(chan</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;">ch</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// do something</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}()</span></span>
<span class="line"><span style="color:#A6ACCD;">	ch </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{}{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">再比如，声明只包含方法的结构体。</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Lamp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l Lamp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">On</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">On</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l Lamp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Off</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">答案解析来源：空 </span><span style="color:#89DDFF;">struct{}</span><span style="color:#A6ACCD;"> 的用途</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div>`,38),o=[e];function r(t,c,D,i,y,F){return n(),a("div",null,o)}const u=s(p,[["render",r]]);export{C as __pageData,u as default};
