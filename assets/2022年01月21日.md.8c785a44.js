import{_ as a,c as e,o as r,a as s}from"./app.eff5f3e9.js";const b=JSON.parse('{"title":"2022年01月21日","description":"","frontmatter":{},"headers":[{"level":2,"title":"头条","slug":"头条","link":"#头条","children":[]},{"level":2,"title":"code","slug":"code","link":"#code","children":[]},{"level":2,"title":"每日一题","slug":"每日一题","link":"#每日一题","children":[]}],"relativePath":"2022年01月21日.md","lastUpdated":1642778406000}'),n={name:"2022年01月21日.md"},t=s(`<h1 id="_2022年01月21日" tabindex="-1">2022年01月21日 <a class="header-anchor" href="#_2022年01月21日" aria-hidden="true">#</a></h1><h2 id="头条" tabindex="-1">头条 <a class="header-anchor" href="#头条" aria-hidden="true">#</a></h2><p><a href="https://toutiao.io/k/p935kqr" target="_blank" rel="noreferrer">面试官问：设计高并发系统的时候，数据库层面该如何设计？</a></p><p><a href="https://toutiao.io/k/t24637w" target="_blank" rel="noreferrer">不一般，在 Nginx 中运行 JavaScript</a></p><p><a href="https://toutiao.io/k/0i1oswg" target="_blank" rel="noreferrer">会计学包含的两种程序设计思想</a></p><p><a href="https://toutiao.io/k/0p5qfkf" target="_blank" rel="noreferrer">今天你设计了吗？</a></p><p><a href="https://toutiao.io/k/qyj3l6n" target="_blank" rel="noreferrer">袁腾飞：阿里飞猪信息流内容推荐探索</a></p><p><a href="https://toutiao.io/k/jx3ogby" target="_blank" rel="noreferrer">五万字读懂c++</a></p><p><a href="https://toutiao.io/k/16fvl8u" target="_blank" rel="noreferrer">Go微服务中的trace日志串联</a></p><p><a href="https://toutiao.io/k/liam55o" target="_blank" rel="noreferrer">大数据SQL优化之数据倾斜解决案例全集</a></p><p><a href="https://toutiao.io/k/fuyo87t" target="_blank" rel="noreferrer">我心中2021原创技术文TOP5</a></p><p><a href="https://toutiao.io/k/3px8inc" target="_blank" rel="noreferrer">10年磨一剑，我是如何弃“医”从事“农民工”，给读研的学弟学妹一点建议</a></p><p><a href="https://toutiao.io/k/hswrs1p" target="_blank" rel="noreferrer">最佳实践 | 什么是好的日志记录实践？</a></p><p><a href="https://toutiao.io/k/co4uof3" target="_blank" rel="noreferrer">事件驱动架构在 vivo 内容平台的实践</a></p><p><a href="https://toutiao.io/k/z9yxmod" target="_blank" rel="noreferrer">5种高大上的yml文件读取方式，你知道吗？</a></p><p><a href="https://toutiao.io/k/zodz8qu" target="_blank" rel="noreferrer">Redis 7.0 共享复制缓冲区的设计与实现</a></p><p><a href="https://toutiao.io/k/fbipovr" target="_blank" rel="noreferrer">在亚麻工作是一种怎样的体验（下）</a></p><p><a href="https://toutiao.io/k/89m073c" target="_blank" rel="noreferrer">带你彻底击溃跳表原理及其Golang实现！（内含图解）</a></p><p><a href="https://toutiao.io/k/kaaxt90" target="_blank" rel="noreferrer">流计算 Oceanus | Flink JVM 内存超限的分析方法总结</a></p><p><a href="https://toutiao.io/k/k0wflvy" target="_blank" rel="noreferrer">苹果接受台积电涨价，包下至少 12 万片 4nm 产能</a></p><p><a href="https://toutiao.io/k/et05wng" target="_blank" rel="noreferrer">几种华丽无比的开发方式</a></p><p><a href="https://toutiao.io/k/jaothzk" target="_blank" rel="noreferrer">你会&quot;拉链&quot;吗？</a></p><p><a href="https://toutiao.io/k/4ndh1gd" target="_blank" rel="noreferrer">[推荐] 面渣逆袭：Java并发六十问，图文详解，快来看看你会多少道！</a></p><p><a href="https://toutiao.io/k/ldd1cse" target="_blank" rel="noreferrer">[推荐] 用规则引擎让你一天上线十个需求</a></p><p><a href="https://toutiao.io/k/mgym1lv" target="_blank" rel="noreferrer">[推荐] 浅谈缓存最终一致性的解决方案</a></p><p><a href="https://toutiao.io/k/c7mn7hz" target="_blank" rel="noreferrer">[推荐] 从MVC到DDD的架构演进</a></p><p><a href="https://toutiao.io/k/zzaz6vu" target="_blank" rel="noreferrer">[推荐] 关于代码质量退化的思考</a></p><p><a href="https://toutiao.io/k/0mfx2nd" target="_blank" rel="noreferrer">[推荐] JVM调优的几种场景（建议收藏）</a></p><p><a href="https://toutiao.io/k/zylzzpi" target="_blank" rel="noreferrer">[推荐] 网络编程怎么做才算是优雅？</a></p><p><a href="https://toutiao.io/k/1dauixx" target="_blank" rel="noreferrer">[推荐] 据说看完这篇 JVM 要一小时</a></p><p><a href="https://toutiao.io/k/j0r6746" target="_blank" rel="noreferrer">[推荐] 京东ClickHouse的实践之路</a></p><p><a href="https://toutiao.io/k/hufqvji" target="_blank" rel="noreferrer">[推荐] 从零打造 Instagram</a></p><p><a href="https://toutiao.io/k/4g58j8v" target="_blank" rel="noreferrer">[推荐] 从零开始搭建公司微服务授权架构技术栈（3种模式），这架构稳的一批...</a></p><p><a href="https://toutiao.io/k/1wuwmui" target="_blank" rel="noreferrer">[推荐] 服务探活的五种方式</a></p><p><a href="https://toutiao.io/k/zavpca4" target="_blank" rel="noreferrer">[推荐] 3万字 | 34 图 | Netty | 内核角度看IO模型</a></p><h2 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/jump-game-iv" target="_blank" rel="noreferrer">跳跃游戏 IV</a></p><h2 id="每日一题" tabindex="-1">每日一题 <a class="header-anchor" href="#每日一题" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> 与 </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> 的区别</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                    查看答案</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"><span style="color:#A6ACCD;">                  答案解析：</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 和 </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 是 Go 语言内建函数，用来分配内存，但适用的类型不同。</span></span>
<span class="line"><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 会为 T 类型的新值分配已置零的内存空间，并返回地址（指针），即类型为 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">T 的值。换句话说就是，返回一个指针，该指针指向新分配的、类型为 T 的零值。适用于值类型，如数组、结构体等。</span></span>
<span class="line"><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> 返回初始化之后的 T 类型的值，这个值并不是 T 类型的零值，也不是指针 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">T，是经过初始化之后的 T 的引用。</span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> 只适用于 slice、</span><span style="color:#89DDFF;">map</span><span style="color:#A6ACCD;"> 和 channel。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,39),o=[t];function p(l,i,c,h,f,k){return r(),e("div",null,o)}const _=a(n,[["render",p]]);export{b as __pageData,_ as default};
