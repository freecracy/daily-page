import{_ as s,c as n,o as a,a as l}from"./app.eff5f3e9.js";const F=JSON.parse('{"title":"2022年02月23日","description":"","frontmatter":{},"headers":[{"level":2,"title":"头条","slug":"头条","link":"#头条","children":[]},{"level":2,"title":"code","slug":"code","link":"#code","children":[]},{"level":2,"title":"每日一题","slug":"每日一题","link":"#每日一题","children":[]}],"relativePath":"2022年02月23日.md","lastUpdated":1645629772000}'),p={name:"2022年02月23日.md"},e=l(`<h1 id="_2022年02月23日" tabindex="-1">2022年02月23日 <a class="header-anchor" href="#_2022年02月23日" aria-hidden="true">#</a></h1><h2 id="头条" tabindex="-1">头条 <a class="header-anchor" href="#头条" aria-hidden="true">#</a></h2><p><a href="https://toutiao.io/k/vcpzf1w" target="_blank" rel="noreferrer">2万字，详解数据湖，概念、特征、架构、方案、场景以及建湖全过程（建议收藏）</a></p><p><a href="https://toutiao.io/k/5z90ek1" target="_blank" rel="noreferrer">刷新世界纪录，GitHub 又一黑科技项目面世！</a></p><p><a href="https://toutiao.io/k/g61h5oi" target="_blank" rel="noreferrer">《算法通关手册》</a></p><p><a href="https://toutiao.io/k/5ximy5q" target="_blank" rel="noreferrer">Kubernetes 故障排除三板斧：理解、管理和预防</a></p><p><a href="https://toutiao.io/k/fu2lq0l" target="_blank" rel="noreferrer">图文详解CDC技术，看这一篇就够了！</a></p><p><a href="https://toutiao.io/k/75br1se" target="_blank" rel="noreferrer">SpringBoot性能优化大全，贼好使！</a></p><p><a href="https://toutiao.io/k/xfbz3fp" target="_blank" rel="noreferrer">海量Node.js网关的架构设计与工程实践！</a></p><p><a href="https://toutiao.io/k/1n166h7" target="_blank" rel="noreferrer">极速生成缩略图，Serverless 支撑赛事转播锁定冬奥亮点</a></p><p><a href="https://toutiao.io/k/kcky0ar" target="_blank" rel="noreferrer">盒子放久了，总会长出猫的！猫盒+抓板，点击链接立即购买！</a></p><p><a href="https://toutiao.io/k/9kokar6" target="_blank" rel="noreferrer">麻省理工学院推出新编程语言</a></p><p><a href="https://toutiao.io/k/cbbl4wm" target="_blank" rel="noreferrer">面渣逆袭：二十二图、八千字、二十问，彻底搞定MyBatis！</a></p><p><a href="https://toutiao.io/k/2o5ql5a" target="_blank" rel="noreferrer">Vue 是如何用 Rollup 打包的？</a></p><p><a href="https://toutiao.io/k/8v9qo6f" target="_blank" rel="noreferrer">网传字节跳动一员工猝死，妻子怀孕两个月</a></p><p><a href="https://toutiao.io/k/7jbrdsb" target="_blank" rel="noreferrer">Java不支持协程？那是你不知道Quasar！</a></p><p><a href="https://toutiao.io/k/i96jp2j" target="_blank" rel="noreferrer">网友：Go 你是 Google 的，Go：我不是</a></p><p><a href="https://toutiao.io/k/vkg2o84" target="_blank" rel="noreferrer">对C指针的理解</a></p><p><a href="https://toutiao.io/k/pnlaqae" target="_blank" rel="noreferrer">[推荐] 什么人能成为Leader，大Leader该做什么</a></p><p><a href="https://toutiao.io/k/6f1qaso" target="_blank" rel="noreferrer">[推荐] 神器 Nginx 的学习手册 ( 建议收藏 )</a></p><p><a href="https://toutiao.io/k/k6tjws1" target="_blank" rel="noreferrer">[推荐] 我做基础架构学到的42件事</a></p><p><a href="https://toutiao.io/k/eteqw6s" target="_blank" rel="noreferrer">[推荐] 你分库分表的姿势对么？——详谈水平分库分表</a></p><p><a href="https://toutiao.io/k/t1d9x3b" target="_blank" rel="noreferrer">[推荐] 如何撰写好技术方案设计-真实案例干货分享</a></p><p><a href="https://toutiao.io/k/0f5fv4t" target="_blank" rel="noreferrer">[推荐] 如何撰写好的技术方案设计-真实案例干货分享</a></p><p><a href="https://toutiao.io/k/j4nqhbc" target="_blank" rel="noreferrer">[推荐] 趣谈IO多路复用的本质</a></p><p><a href="https://toutiao.io/k/fb7mdkl" target="_blank" rel="noreferrer">[推荐] ClickHouse使用实践与规范</a></p><p><a href="https://toutiao.io/k/o77uhyt" target="_blank" rel="noreferrer">[推荐] 轻松搞懂5种IO模型</a></p><p><a href="https://toutiao.io/k/25nkguu" target="_blank" rel="noreferrer">[推荐] 石墨文档是如何通过 WebSocket 实现百万长连接的？</a></p><p><a href="https://toutiao.io/k/upx1qip" target="_blank" rel="noreferrer">[推荐] 一张图看懂微服务架构路线</a></p><h2 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/reverse-only-letters" target="_blank" rel="noreferrer">仅仅反转字母</a></p><h2 id="每日一题" tabindex="-1">每日一题 <a class="header-anchor" href="#每日一题" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">                  以下代码能否通过编译？</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">worker</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">work</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">person</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	worker</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> w worker </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 能；B</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 不能；C</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 不知道</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                    查看答案</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"><span style="color:#A6ACCD;">                  答案解析：</span></span>
<span class="line"><span style="color:#A6ACCD;">                  这里答错的原因在于 worker 是一个接口，如果是一个普通的类型，相信大家会答对。一个结构体竟然可以嵌入一个接口？！</span></span>
<span class="line"><span style="color:#F78C6C;">01</span></span>
<span class="line"><span style="color:#A6ACCD;">我们都知晓 Go 没有继承，但可以通过内嵌类型模拟部分继承的功能。大家要记住，接口也是类型，自然也将它作为嵌入类型。如果题目的 person 接口体改为：</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">person</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	worker worker</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">相信会有更多人答对，这和嵌入类型唯一的区别在于是否显示指定了字段名，其他并无区别。</span></span>
<span class="line"><span style="color:#A6ACCD;">将接口作为嵌入类型可能让人感觉有些奇怪：那这个类型不是默认就实现了这个接口？！确实是这样的，所以才有了题目中这一句能编译通过：</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> w worker </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">只不过，因为实例化 person 时，没有给 worker 指定值，因此 person 中的 worker 是 </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;">，调用它的话会报错，但编译是没问题的。</span></span>
<span class="line"><span style="color:#F78C6C;">02</span></span>
<span class="line"><span style="color:#A6ACCD;">有人可能要问，嵌入接口有实际用途吗？我找一个标准库中的例子。</span></span>
<span class="line"><span style="color:#A6ACCD;">在 sort 包中，有一个接口：Interface</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Len is the number of elements in the collection.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Len</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Less reports whether the element with</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// index i should sort before the element with index j.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Less</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Swap swaps the elements with indexes i and j.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Swap</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">这是用于排序的。还有另外一个结构体：reverse</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">reverse</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// This embedded Interface permits Reverse to use the methods of</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// another Interface implementation.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Interface</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">它就内嵌了一个 Interface，用于排序的反转。</span></span>
<span class="line"><span style="color:#A6ACCD;">而内嵌接口的关键在于如何给这个内嵌的接口赋值。sort 包有一个函数：Reverse</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Reverse</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data Interface</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> Interface </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">reverse</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">其中实例化 reverse 时，直接通过传递的 Interface 实例赋值给 reverse 的内嵌接口，然后 reverse 类型可以有选择的重新实现内嵌的 Interface 的方法。比如 Less 方法：</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r reverse</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Less</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Interface</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Less</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">03</span></span>
<span class="line"><span style="color:#A6ACCD;">回到上面的题目，如果我们通过实例化的 w 调用 work 方法会报错：</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> w worker </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">w</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">work</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// panic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">和上面 reverse 类似，你需要给 person 中的 worker 实例化，也就是需要一个实现了 worker 接口的类型实例。比如：</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">student</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{</span></span>
<span class="line"><span style="color:#A6ACCD;">    name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">s student</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">work</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">I am </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">, I am learning</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">然后这样实例化 person：</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> w worker </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> person</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">worker</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> student</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">polarisxu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">你掌握了吗？</span></span>
<span class="line"><span style="color:#A6ACCD;">答案解析来自：https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//polarisxu.studygolang.com/posts/go/action/weekly-question-analysis-embed-interface/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div>`,33),r=[e];function o(t,c,i,D,y,A){return a(),n("div",null,r)}const b=s(p,[["render",o]]);export{F as __pageData,b as default};
