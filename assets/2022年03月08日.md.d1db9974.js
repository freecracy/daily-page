import{_ as s,c as n,o as a,a as l}from"./app.eff5f3e9.js";const b=JSON.parse('{"title":"2022年03月08日","description":"","frontmatter":{},"headers":[{"level":2,"title":"头条","slug":"头条","link":"#头条","children":[]},{"level":2,"title":"code","slug":"code","link":"#code","children":[]},{"level":2,"title":"每日一题","slug":"每日一题","link":"#每日一题","children":[]}],"relativePath":"2022年03月08日.md","lastUpdated":1646753099000}'),p={name:"2022年03月08日.md"},e=l(`<h1 id="_2022年03月08日" tabindex="-1">2022年03月08日 <a class="header-anchor" href="#_2022年03月08日" aria-hidden="true">#</a></h1><h2 id="头条" tabindex="-1">头条 <a class="header-anchor" href="#头条" aria-hidden="true">#</a></h2><p><a href="https://toutiao.io/k/vvrn2r5" target="_blank" rel="noreferrer">数据挖掘：文本相似性模型</a></p><p><a href="https://toutiao.io/k/hn5ah6j" target="_blank" rel="noreferrer">来，5W1H分析法帮你系统掌握缓存！（图文并茂）</a></p><p><a href="https://toutiao.io/k/2qnv08u" target="_blank" rel="noreferrer">Kafka放弃Zookeeper后如何持存储主题与消费组呢？</a></p><p><a href="https://toutiao.io/k/1n4p2rg" target="_blank" rel="noreferrer">从输入网址到内容返回解析｜前端工程师需要掌握这些知识</a></p><p><a href="https://toutiao.io/k/p5z6q6j" target="_blank" rel="noreferrer">12 道腾讯前端面试真题及答案整理</a></p><p><a href="https://toutiao.io/k/aqpvm0b" target="_blank" rel="noreferrer">关系型数据库设计要领</a></p><p><a href="https://toutiao.io/k/szbx3jh" target="_blank" rel="noreferrer">俄罗斯、乌克兰程序员薪资大曝光！</a></p><p><a href="https://toutiao.io/k/qj0g7q6" target="_blank" rel="noreferrer">深入剖析优惠券核心架构设计</a></p><p><a href="https://toutiao.io/k/ivkhjaa" target="_blank" rel="noreferrer">游戏黑灰产识别和溯源取证</a></p><p><a href="https://toutiao.io/k/i82qqok" target="_blank" rel="noreferrer">浅谈 Node.js 热更新</a></p><p><a href="https://toutiao.io/k/akfto1w" target="_blank" rel="noreferrer">手撸一个智能指针</a></p><p><a href="https://toutiao.io/k/jck618p" target="_blank" rel="noreferrer">惨，给Go提的代码被批麻了</a></p><p><a href="https://toutiao.io/k/5b6lzfv" target="_blank" rel="noreferrer">震惊，博主终于更新了坦克大战小游戏！！！</a></p><p><a href="https://toutiao.io/k/c8j9oo2" target="_blank" rel="noreferrer">Flink CDC 核心：Debezium 1.9.0.Beta1 发布！</a></p><p><a href="https://toutiao.io/k/6pltecc" target="_blank" rel="noreferrer">实施5000能提高软件质量吗？</a></p><p><a href="https://toutiao.io/k/wwseuek" target="_blank" rel="noreferrer">开源：如何自定义spring boot starter</a></p><p><a href="https://toutiao.io/k/2z83xu1" target="_blank" rel="noreferrer">「前端CI/CD系列」第二篇：如何用建木CI更新七牛云CDN证书</a></p><p><a href="https://toutiao.io/k/hhsjbir" target="_blank" rel="noreferrer">图解算法基础--快速排序，附 Go 代码实现</a></p><p><a href="https://toutiao.io/k/vjw1dlc" target="_blank" rel="noreferrer">[推荐] Golang 简洁架构实战</a></p><p><a href="https://toutiao.io/k/75br1se" target="_blank" rel="noreferrer">[推荐] SpringBoot性能优化大全，贼好使！</a></p><p><a href="https://toutiao.io/k/imslmgz" target="_blank" rel="noreferrer">[推荐] 高并发是一种架构思维模式</a></p><p><a href="https://toutiao.io/k/vcpzf1w" target="_blank" rel="noreferrer">[推荐] 2万字，详解数据湖，概念、特征、架构、方案、场景以及建湖全过程（建议收藏）</a></p><p><a href="https://toutiao.io/k/qjooigy" target="_blank" rel="noreferrer">[推荐] MySQL 团队开发规范</a></p><p><a href="https://toutiao.io/k/chtkqxo" target="_blank" rel="noreferrer">[推荐] Java泛型详解，史上最全图文详解！</a></p><p><a href="https://toutiao.io/k/xk3qbvm" target="_blank" rel="noreferrer">[推荐] 微服务从代码到k8s部署应有尽有大结局（k8s部署）</a></p><h2 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/plates-between-candles" target="_blank" rel="noreferrer">蜡烛之间的盘子</a></p><h2 id="每日一题" tabindex="-1">每日一题 <a class="header-anchor" href="#每日一题" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">                  这道题看起来很迷惑，目测很多人可能会答错。以下代码输出什么？（这是来自 《Go爱好者周刊》的一道题目，正确率才 </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">）</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">encoding/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    t </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">        N </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}{</span></span>
<span class="line"><span style="color:#A6ACCD;">        time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2020</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UTC</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    m</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Marshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">A：</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2020-12-20T00:00:00Z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">N</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">；B：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2020-12-20T00:00:00Z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">；C：</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">N</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">；D：</span><span style="color:#89DDFF;">&lt;nil&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                    查看答案</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span></span>
<span class="line"><span style="color:#A6ACCD;">                </span></span>
<span class="line"><span style="color:#A6ACCD;">                  答案解析：</span></span>
<span class="line"><span style="color:#A6ACCD;">                  正确答案 B，但为什么呢？大家不用在乎是不是刁钻的题目，通过题目能学到知识才是最重要的。</span></span>
<span class="line"><span style="color:#F78C6C;">01</span></span>
<span class="line"><span style="color:#A6ACCD;">对一个结构体实例进行 json 系列化，直觉很容易选 A。但很显然，不可能这么简单，因此需要仔细看代码。至于选 C 和 D 的人，多半是瞎猜的吧，当然选 B 也不排除有瞎猜的。</span></span>
<span class="line"><span style="color:#A6ACCD;">为什么选 B 呢？我想借助一个例子讲解。</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">encoding/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  name  </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  hobby </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  person </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> Person</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">polarisxu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> hobby</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Golang</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  m</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Marshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">如果你认为输出 </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">polarisxu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hobby</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Golang</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">，那你得去补补 encoding</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">json 包的知识了。要想输出  </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">polarisxu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hobby</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Golang”}，一般我们会这么做：将 Person 的字段导出，同时设置上 tag。</span></span>
<span class="line"><span style="color:#C3E88D;">type Person struct {</span></span>
<span class="line"><span style="color:#C3E88D;">  Name  string \`json:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">  Hobby string \`json:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">hobby</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">但如果我们不想导出 Person 的字段呢？可以通过实现 Marshaler 来做到。</span></span>
<span class="line"><span style="color:#C3E88D;">func (p Person) MarshalJSON() ([]byte, error) {</span></span>
<span class="line"><span style="color:#C3E88D;">	return []byte(\`{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;\`</span><span style="color:#C3E88D;">+p.name+</span><span style="color:#89DDFF;">\`&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">hobby</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;\`</span><span style="color:#C3E88D;">+p.hobby+</span><span style="color:#89DDFF;">\`&quot;</span><span style="color:#C3E88D;">}\`), nil</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">02</span></span>
<span class="line"><span style="color:#C3E88D;">回到题目上，time.Time 是什么类型？</span></span>
<span class="line"><span style="color:#C3E88D;">type Time struct {</span></span>
<span class="line"><span style="color:#C3E88D;">    // contains filtered or unexported fields</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">这是一个没有导出任何字段的结构体类型，因此它肯定实现了 Marshaler 接口。</span></span>
<span class="line"><span style="color:#C3E88D;">// MarshalJSON implements the json.Marshaler interface.</span></span>
<span class="line"><span style="color:#C3E88D;">// The time is a quoted string in RFC 3339 format, with sub-second precision added if present.</span></span>
<span class="line"><span style="color:#C3E88D;">func (t Time) MarshalJSON() ([]byte, error) {</span></span>
<span class="line"><span style="color:#C3E88D;">	if y := t.Year(); y &lt; 0 || y &gt;= 10000 {</span></span>
<span class="line"><span style="color:#C3E88D;">		// RFC 3339 is clear that years are 4 digits exactly.</span></span>
<span class="line"><span style="color:#C3E88D;">		// See golang.org/issue/4556#c15 for more discussion.</span></span>
<span class="line"><span style="color:#C3E88D;">		return nil, errors.New(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">Time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MarshalJSON</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> year outside of </span><span style="color:#89DDFF;font-style:italic;">range</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">)</span></span>
<span class="line"><span style="color:#C3E88D;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">	b := make([]byte, 0, len(RFC3339Nano)+2)</span></span>
<span class="line"><span style="color:#C3E88D;">	b = append(b, &#39;</span><span style="color:#89DDFF;">&quot;&#39;</span><span style="color:#C3E88D;">)</span></span>
<span class="line"><span style="color:#C3E88D;">	b = t.AppendFormat(b, RFC3339Nano)</span></span>
<span class="line"><span style="color:#C3E88D;">	b = append(b, </span><span style="color:#89DDFF;">&#39;&quot;</span><span style="color:#C3E88D;">&#39;)</span></span>
<span class="line"><span style="color:#C3E88D;">	return b, nil</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">这么说，答案不应该就是 A 吗？别急。</span></span>
<span class="line"><span style="color:#C3E88D;">03</span></span>
<span class="line"><span style="color:#C3E88D;">如果 t 是这么定义的：</span></span>
<span class="line"><span style="color:#C3E88D;">t := struct {</span></span>
<span class="line"><span style="color:#C3E88D;">  Time time.Time</span></span>
<span class="line"><span style="color:#C3E88D;">  N int</span></span>
<span class="line"><span style="color:#C3E88D;">}{</span></span>
<span class="line"><span style="color:#C3E88D;">  time.Date(2020, 12, 20, 0, 0, 0, 0, time.UTC),</span></span>
<span class="line"><span style="color:#C3E88D;">  5,</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">那结果就是 A。而题目中，time.Time 是内嵌的。你学习 Go 时，应该看过通过内嵌来模拟继承的功能吧！</span></span>
<span class="line"><span style="color:#C3E88D;">正是因为内嵌，t 的方法集包括了 time.Time 的方法集，所以，t 自动实现了 Marshaler 接口。因此答案是 B。</span></span>
<span class="line"><span style="color:#C3E88D;">其实这道题的情况，在日常工作中还真有可能遇到。所以，当你内嵌某个类型时，特别这个类型不是你自己定义的，需要留意这种情况。</span></span>
<span class="line"><span style="color:#C3E88D;">一般解决这个问题的方法有两种：1）不内嵌；2）重新实现 MarshalJSON 方法。</span></span>
<span class="line"><span style="color:#C3E88D;">然而这道题无法重新实现 MarshalJSON 方法，因为结构体类型是匿名的。只能通过不内嵌来得到正确的结果。</span></span>
<span class="line"><span style="color:#C3E88D;">04</span></span>
<span class="line"><span style="color:#C3E88D;">最后一起看下 json.Marshal 函数的文档，主要看下面这段：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">Marshal traverses the value v recursively. If an encountered value implements the Marshaler interface and is not a nil pointer, Marshal calls its MarshalJSON method to produce JSON. If no MarshalJSON method is present but the value implements encoding.TextMarshaler instead, Marshal calls its MarshalText method and encodes the result as a JSON string. The nil pointer exception is not strictly necessary but mimics a similar, necessary exception in the behavior of UnmarshalJSON.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">大意是说，如果值实现了 json.Marshaler 接口并且不是 nil 指针，则 Marshal 函数会调用其 MarshalJSON 方法以生成 JSON。如果不存在 MarshalJSON 方法，但该值实现 encoding.TextMarshaler 接口，则 Marshal 函数调用其 MarshalText 方法并将结果编码为 JSON 字符串。</span></span>
<span class="line"><span style="color:#C3E88D;">可见，json.Marshal 函数优先调用 MarshalJSON，然后是 MarshalText，如果都没有，才会走正常的类型编码逻辑。</span></span>
<span class="line"><span style="color:#C3E88D;">答案解析来自：https://polarisxu.studygolang.com/posts/go/action/weekly-question-embed-time/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">                </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br></div></div>`,31),o=[e];function r(t,c,D,i,y,F){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
